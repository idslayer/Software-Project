name: ci

on:
  push:
    branches:
      - main
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: LogIn to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Build and push FE
#        uses: docker/build-push-action@v6
#        with:
#          push: true
#          tags: idtruoc/febookingservice:latest
#          context: "{{defaultContext}}:febookingservice"
#      -
#        name: Build, test and push BE
#        uses: docker/build-push-action@v6
#        with:
#          push: true
#          tags: idtruoc/bookingservice:latest
#          context: "{{defaultContext}}:bookingservice"

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Generate docker-compose.yaml
        run: |
          cat <<EOF > docker-compose.yaml
          version: '3'
          services:
            frontend:
              image: idtruoc/febookingservice:latest
              ports:
                - "5173:5173"
            backend:
              image: idtruoc/bookingservice:latest
              ports:
                - "8080:8080"
          EOF

      - name: Generate deploy.sh
        run: |
          cat <<'EOF' > deploy.sh
          #!/bin/bash
          set -e
          docker-compose down
          docker-compose pull
          docker-compose up -d
          EOF
          chmod +x deploy.sh

      - name: Copy files to remote server
        run: |
          echo "${{ secrets.AZURE_SSH_KEY }}" > key.pem
          chmod 600 key.pem
          scp -o StrictHostKeyChecking=no -i key.pem deploy.sh ${{ vars.DEPLOY_USER }}@${{ vars.DEPLOY_SERVER }}:~/
          scp -o StrictHostKeyChecking=no -i key.pem docker-compose.yaml ${{ vars.DEPLOY_USER }}@${{ vars.DEPLOY_SERVER }}:~/

      - name: SSH to remote server and deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ vars.DEPLOY_USER }}@${{ vars.DEPLOY_SERVER }} './deploy.sh'

